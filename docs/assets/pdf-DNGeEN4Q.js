import{_ as l}from"./jspdf-Cpx4AXLL.js";import{P as g,C as n,e as f}from"./index-ZSoERHZq.js";import"./vendor-react-CkEsgLSR.js";import"./vendor-ui-BqtEeXaX.js";async function P(i,c,s){const m=await new Promise((e,u)=>{const o=new Image;o.onload=()=>e(o),o.onerror=u,o.src=i}),d=Math.max(1,m.naturalWidth||n),r=Math.max(1,m.naturalHeight||n),a=document.createElement("canvas");a.width=d,a.height=r;const t=a.getContext("2d");if(!t)throw new Error("Canvas2D unavailable");return t.drawImage(m,0,0,d,r),{dataUrl:a.toDataURL("image/jpeg",s),mime:"JPEG"}}async function D(i,c){const s=c?.format??"jpeg",m=Math.max(.5,Math.min(.95,c?.quality??g)),{default:d}=await l(async()=>{const{default:t}=await import("./jspdf-Cpx4AXLL.js").then(e=>e.j);return{default:t}},[]),r=new d({unit:"pt",format:[n,n]}),a=i.length;for(let t=0;t<i.length;t++){t>0&&r.addPage();const e=await f(i[t].id,n),{dataUrl:u,mime:o}=s==="png"?{dataUrl:e,mime:"PNG"}:await P(e,"jpeg",m);r.addImage(u,o,0,0,n,n),c?.onProgress?.({done:t+1,total:a,pct:Math.round((t+1)/a*100)})}return r.output("arraybuffer")}export{D as exportCardsToPdf};
