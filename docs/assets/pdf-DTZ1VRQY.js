import{_ as P}from"./jspdf-Cpx4AXLL.js";import{P as h,C as e,e as _}from"./index-urH7O3lh.js";import"./vendor-react-CkEsgLSR.js";import"./vendor-ui-BqtEeXaX.js";async function D(s,m,l){const c=await new Promise((t,o)=>{const r=new Image;r.onload=()=>t(r),r.onerror=o,r.src=s}),d=Math.max(1,c.naturalWidth||e),n=Math.max(1,c.naturalHeight||e),a=document.createElement("canvas");a.width=d,a.height=n;const u=a.getContext("2d");if(!u)throw new Error("Canvas2D unavailable");return u.drawImage(c,0,0,d,n),{dataUrl:a.toDataURL("image/jpeg",l),mime:"JPEG"}}async function j(s,m){const l=m?.format??"jpeg",c=Math.max(.5,Math.min(.95,m?.quality??h)),{default:d}=await P(async()=>{const{default:t}=await import("./jspdf-Cpx4AXLL.js").then(o=>o.j);return{default:t}},[]),n=new d({unit:"pt",format:[e,e],compress:!0}),a=s.length,u=performance.now();for(let t=0;t<s.length;t++){t>0&&n.addPage();const o=await _(s[t].id,e),{dataUrl:r,mime:g}=l==="png"?{dataUrl:o,mime:"PNG"}:await D(o,"jpeg",c);n.addImage(r,g,0,0,e,e);const i=t+1,f=performance.now()-u,p=Math.round(i/a*100),w=i>0?f/i*(a-i):void 0;m?.onProgress?.({done:i,total:a,elapsedMs:f,etaMs:w,pct:p})}return n.output("arraybuffer")}export{j as exportCardsToPdf};
